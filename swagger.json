{
  "swagger": "2.0",
  "info": {
    "description": "Marketplace Service Repository",
    "version": "local",
    "title": "Marketplace Integration Services",
    "license": {
      "name": "Lowes.com License",
      "url": "https://www.lowes.com/"
    }
  },
  "host": "stage.carbon.gcp.lowes.com",
  "basePath": "/-marketplace",
  "tags": [
    {
      "name": "Marketplace Items APIs",
      "description": "Item Controller"
    },
    {
      "name": "Store APIs",
      "description": "Store Controller"
    }
  ],
  "paths": {
    "/items": {
      "post": {
        "tags": [
          "Marketplace Items APIs"
        ],
        "summary": "Update Items",
        "operationId": "updateItemsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "client-id",
            "in": "header",
            "description": "client-id",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "itemRequest",
            "description": "itemRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ItemRequest"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "description": "x-api-version",
            "required": false,
            "type": "string",
            "default": "v1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ItemResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/stores/{storeId}": {
      "get": {
        "tags": [
          "Store APIs"
        ],
        "summary": "getStoreInformation",
        "operationId": "getStoreInformationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "storeId",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-version",
            "in": "header",
            "description": "x-api-version",
            "required": false,
            "type": "string",
            "default": "v1"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "Inventory": {
      "type": "object",
      "properties": {
        "delivery": {
          "$ref": "#/definitions/InventoryDetails"
        },
        "parcel": {
          "$ref": "#/definitions/InventoryDetails"
        },
        "pickup": {
          "$ref": "#/definitions/InventoryDetails"
        }
      },
      "title": "Inventory",
      "description": "Inventory Details of the product"
    },
    "InventoryDetails": {
      "type": "object",
      "properties": {
        "itmLdTm": {
          "type": "string",
          "example": "03-22-2022-05:00 UTC",
          "description": "Item limited time."
        },
        "itmLdTmAvlQty": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "item limited quantity of the product."
        },
        "itmLdTmDays": {
          "type": "integer",
          "format": "int32",
          "example": 14,
          "description": "item limited days of the product"
        },
        "onhandQty": {
          "type": "integer",
          "format": "int32",
          "example": 15,
          "description": "on hand quantity of the product."
        },
        "totalQty": {
          "type": "integer",
          "format": "int32",
          "example": 35,
          "description": "Total quantity of the product."
        }
      },
      "title": "InventoryDetails",
      "description": "Inventory Details object that holds inventory information"
    },
    "Item": {
      "type": "object",
      "properties": {
        "inventory": {
          "description": "Inventory details of the product",
          "$ref": "#/definitions/Inventory"
        },
        "itemId": {
          "type": "string"
        },
        "price": {
          "description": "Price details of the product",
          "$ref": "#/definitions/Price"
        },
        "product": {
          "description": "Product details",
          "$ref": "#/definitions/Product"
        }
      },
      "title": "Item",
      "description": "Item object that holds Price and Inventory details from bi-frost"
    },
    "ItemRequest": {
      "type": "object",
      "properties": {
        "itemIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseCategory": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "searchNearByStores": {
          "type": "string"
        },
        "storeId": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        }
      },
      "title": "ItemRequest"
    },
    "ItemResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "object",
          "description": "List of Items",
          "additionalProperties": {
            "$ref": "#/definitions/Item"
          }
        },
        "storeId": {
          "type": "string",
          "example": "0140",
          "description": "store number based on the zipcode"
        },
        "zipCode": {
          "type": "string",
          "example": 90880,
          "description": "Zipcode of the store"
        }
      },
      "title": "ItemResponse",
      "description": "Item Response from bi-frost"
    },
    "Price": {
      "type": "object",
      "properties": {
        "finalPrice": {
          "type": "number",
          "example": 35,
          "description": "The final price for the product."
        }
      },
      "title": "Price",
      "description": "Price Details object that holds final price from bi-frost"
    },
    "Product": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string",
          "example": "Sharp",
          "description": "The brand of the product."
        },
        "description": {
          "type": "string",
          "example": "in Built-In Dishwasher",
          "description": "The description of the product."
        },
        "itemNumber": {
          "type": "string",
          "example": 3073317,
          "description": "The itemNumber of the product."
        },
        "modelId": {
          "type": "string",
          "example": "SDW6747GS",
          "description": "The modelId of the product."
        },
        "omniItemId": {
          "type": "string",
          "example": 5001586159,
          "description": "The omniItemId for the product."
        }
      },
      "title": "Product",
      "description": "Product Details object that holds product info from bi-frost"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    }
  }
}